/**
 */
package org.msee.slmtoolbox.modeling.model.ssm.bsm.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.msee.slmtoolbox.modeling.model.ssm.bsm.util.BsmAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class BsmItemProviderAdapterFactory extends BsmAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public BsmItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmModelItemProvider bsmModelItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmModelAdapter() {
		if (bsmModelItemProvider == null) {
			bsmModelItemProvider = new BsmModelItemProvider(this);
		}

		return bsmModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmServiceItemProvider bsmServiceItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmServiceAdapter() {
		if (bsmServiceItemProvider == null) {
			bsmServiceItemProvider = new BsmServiceItemProvider(this);
		}

		return bsmServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmStakeholder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmStakeholderItemProvider bsmStakeholderItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmStakeholder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmStakeholderAdapter() {
		if (bsmStakeholderItemProvider == null) {
			bsmStakeholderItemProvider = new BsmStakeholderItemProvider(this);
		}

		return bsmStakeholderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmPartner} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmPartnerItemProvider bsmPartnerItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmPartner}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmPartnerAdapter() {
		if (bsmPartnerItemProvider == null) {
			bsmPartnerItemProvider = new BsmPartnerItemProvider(this);
		}

		return bsmPartnerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmValueItemProvider bsmValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmValueAdapter() {
		if (bsmValueItemProvider == null) {
			bsmValueItemProvider = new BsmValueItemProvider(this);
		}

		return bsmValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmPerformanceIndicator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmPerformanceIndicatorItemProvider bsmPerformanceIndicatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmPerformanceIndicator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmPerformanceIndicatorAdapter() {
		if (bsmPerformanceIndicatorItemProvider == null) {
			bsmPerformanceIndicatorItemProvider = new BsmPerformanceIndicatorItemProvider(this);
		}

		return bsmPerformanceIndicatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmPiField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmPiFieldItemProvider bsmPiFieldItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmPiField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmPiFieldAdapter() {
		if (bsmPiFieldItemProvider == null) {
			bsmPiFieldItemProvider = new BsmPiFieldItemProvider(this);
		}

		return bsmPiFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmDecisionVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmDecisionVariableItemProvider bsmDecisionVariableItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmDecisionVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmDecisionVariableAdapter() {
		if (bsmDecisionVariableItemProvider == null) {
			bsmDecisionVariableItemProvider = new BsmDecisionVariableItemProvider(this);
		}

		return bsmDecisionVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmDecisionObjective} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmDecisionObjectiveItemProvider bsmDecisionObjectiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmDecisionObjective}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmDecisionObjectiveAdapter() {
		if (bsmDecisionObjectiveItemProvider == null) {
			bsmDecisionObjectiveItemProvider = new BsmDecisionObjectiveItemProvider(this);
		}

		return bsmDecisionObjectiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmMseService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmMseServiceItemProvider bsmMseServiceItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmMseService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmMseServiceAdapter() {
		if (bsmMseServiceItemProvider == null) {
			bsmMseServiceItemProvider = new BsmMseServiceItemProvider(this);
		}

		return bsmMseServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmProduct} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmProductItemProvider bsmProductItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmProduct}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmProductAdapter() {
		if (bsmProductItemProvider == null) {
			bsmProductItemProvider = new BsmProductItemProvider(this);
		}

		return bsmProductItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmFunctionality} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmFunctionalityItemProvider bsmFunctionalityItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmFunctionality}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmFunctionalityAdapter() {
		if (bsmFunctionalityItemProvider == null) {
			bsmFunctionalityItemProvider = new BsmFunctionalityItemProvider(this);
		}

		return bsmFunctionalityItemProvider;
	}
	
	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmProcess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmProcessItemProvider bsmProcessItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmProcess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmProcessAdapter() {
		if (bsmProcessItemProvider == null) {
			bsmProcessItemProvider = new BsmProcessItemProvider(this);
		}

		return bsmProcessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmCustomer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmCustomerItemProvider bsmCustomerItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmCustomer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmCustomerAdapter() {
		if (bsmCustomerItemProvider == null) {
			bsmCustomerItemProvider = new BsmCustomerItemProvider(this);
		}

		return bsmCustomerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmDecision} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmDecisionItemProvider bsmDecisionItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmDecision}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmDecisionAdapter() {
		if (bsmDecisionItemProvider == null) {
			bsmDecisionItemProvider = new BsmDecisionItemProvider(this);
		}

		return bsmDecisionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmResourceItemProvider bsmResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmResourceAdapter() {
		if (bsmResourceItemProvider == null) {
			bsmResourceItemProvider = new BsmResourceItemProvider(this);
		}

		return bsmResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmDecisionStructure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmDecisionStructureItemProvider bsmDecisionStructureItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmDecisionStructure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmDecisionStructureAdapter() {
		if (bsmDecisionStructureItemProvider == null) {
			bsmDecisionStructureItemProvider = new BsmDecisionStructureItemProvider(this);
		}

		return bsmDecisionStructureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmEnterprise} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmEnterpriseItemProvider bsmEnterpriseItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmEnterprise}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmEnterpriseAdapter() {
		if (bsmEnterpriseItemProvider == null) {
			bsmEnterpriseItemProvider = new BsmEnterpriseItemProvider(this);
		}

		return bsmEnterpriseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmVirtualEnterprise} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmVirtualEnterpriseItemProvider bsmVirtualEnterpriseItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmVirtualEnterprise}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmVirtualEnterpriseAdapter() {
		if (bsmVirtualEnterpriseItemProvider == null) {
			bsmVirtualEnterpriseItemProvider = new BsmVirtualEnterpriseItemProvider(this);
		}

		return bsmVirtualEnterpriseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmVEParticipation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmVEParticipationItemProvider bsmVEParticipationItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmVEParticipation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmVEParticipationAdapter() {
		if (bsmVEParticipationItemProvider == null) {
			bsmVEParticipationItemProvider = new BsmVEParticipationItemProvider(this);
		}

		return bsmVEParticipationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BsmComponentItemProvider bsmComponentItemProvider;

	/**
	 * This creates an adapter for a {@link org.msee.slmtoolbox.modeling.model.ssm.bsm.BsmComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBsmComponentAdapter() {
		if (bsmComponentItemProvider == null) {
			bsmComponentItemProvider = new BsmComponentItemProvider(this);
		}

		return bsmComponentItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (bsmModelItemProvider != null) bsmModelItemProvider.dispose();
		if (bsmServiceItemProvider != null) bsmServiceItemProvider.dispose();
		if (bsmCustomerItemProvider != null) bsmCustomerItemProvider.dispose();
		if (bsmStakeholderItemProvider != null) bsmStakeholderItemProvider.dispose();
		if (bsmPartnerItemProvider != null) bsmPartnerItemProvider.dispose();
		if (bsmProductItemProvider != null) bsmProductItemProvider.dispose();
		if (bsmComponentItemProvider != null) bsmComponentItemProvider.dispose();
		if (bsmFunctionalityItemProvider != null) bsmFunctionalityItemProvider.dispose();
		if (bsmResourceItemProvider != null) bsmResourceItemProvider.dispose();
		if (bsmProcessItemProvider != null) bsmProcessItemProvider.dispose();
		if (bsmDecisionItemProvider != null) bsmDecisionItemProvider.dispose();
		if (bsmDecisionStructureItemProvider != null) bsmDecisionStructureItemProvider.dispose();
		if (bsmEnterpriseItemProvider != null) bsmEnterpriseItemProvider.dispose();
		if (bsmVirtualEnterpriseItemProvider != null) bsmVirtualEnterpriseItemProvider.dispose();
		if (bsmVEParticipationItemProvider != null) bsmVEParticipationItemProvider.dispose();
		if (bsmValueItemProvider != null) bsmValueItemProvider.dispose();
		if (bsmPerformanceIndicatorItemProvider != null) bsmPerformanceIndicatorItemProvider.dispose();
		if (bsmPiFieldItemProvider != null) bsmPiFieldItemProvider.dispose();
		if (bsmDecisionVariableItemProvider != null) bsmDecisionVariableItemProvider.dispose();
		if (bsmDecisionObjectiveItemProvider != null) bsmDecisionObjectiveItemProvider.dispose();
		if (bsmMseServiceItemProvider != null) bsmMseServiceItemProvider.dispose();
	}

}
